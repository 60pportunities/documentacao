name: build_deploy_60pportunities

on:
  push:
    branches:
      - main  # ou master, dependendo do seu branch principal
    tags:
      - '*'   # Executa também quando tags são criadas

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout do repositório
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Necessário para o changelog gerar o histórico completo
        lfs: true       # Habilita o Git LFS

    # 2. Instalação do Git LFS
    - name: Install Git LFS
      run: |
        sudo apt-get update
        sudo apt-get install -y git-lfs
        git lfs install

    # 3. Verificação da instalação do Git LFS
    - name: Verify Git LFS installation
      run: |
        git lfs version
        if ! command -v git-lfs &> /dev/null; then
          echo "Git LFS not installed!"
          exit 1
        fi

    # 4. Setup do Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.*'

    # 5. Instalação de pacotes Python básicos
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mkdocs mike

    # 6. Instalação de requirements.txt se existir
    - name: Install requirements
      run: |
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        else
          echo "requirements.txt not found, skipping..."
        fi

    # 7. Geração do Changelog
    - name: Generate Changelog
      uses: saadmk11/changelog-ci@v1.1.2
      with:
        latest: true
        #config_file: ".changelog-ci.json"  # Opcional: arquivo de configuração
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 8. Buscar a última tag do repositório
    - name: Get latest tag
      id: get-tag
      run: |
        # Obtém a última tag por data de criação
        TAG=$(git describe --tags --abbrev=0)
        echo "Latest tag: $TAG"
        echo "tag=$TAG" >> $GITHUB_OUTPUT

    # 9. Deploy com Mike para GitHub Pages
    - name: Deploy documentation
      run: |
        # Configura o git
        git config --global user.name "HVasconcellos"
        git config --global user.email "s60pportunities@gmail.com"
        
        # Usa Mike para fazer o deploy
        mike deploy --push --update-aliases ${{ steps.get-tag.outputs.tag }} latest
        mike set-default latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
